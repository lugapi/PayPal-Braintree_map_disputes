<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Test</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">

    <style>
        .disputeDetailLinks {
            color: red;
        }

        .cards-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: flex-start;
        }

        .card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            width: 300px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease;
        }

        .card.valid {
            background-color: lightgreen;
        }

        .card.invalid {
            background-color: lightcoral;
        }

        .card:hover {
            transform: scale(1.05);
        }

        .dispute-info {
            margin-top: 10px;
        }

        .disputeDetailLinks {
            color: #3498db;
            text-decoration: none;
        }

        .disputeDetailLinks:hover {
            text-decoration: underline;
        }
    </style>
</head>

<body>
    <div class="container mx-auto p-4 mt-10">
        <h1 class="text-3xl font-bold">Mapping PayPal x Braintree disputes</h1>
        <a class="text-blue-500 hover:text-blue-700 hover:underline" target="_blank" href="https://developer.paypal.com/braintree/articles/guides/payment-methods/paypal/disputes">Documentation</a>

        <form id="loop-form" class="bg-gray-100 p-4 mt-4 rounded-lg">
            <label for="number" class="block text-sm font-medium text-gray-700 mb-2"><strong
                    class="italic">(OPTIONAL)</strong> Number of transactions to create
                :</label>
            <input type="number" id="number" name="number" required
                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 border border-solid border-gray-300 rounded-md w-full sm:max-w-xs p-2">
            <button type="submit"
                class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Generate</button>
        </form>

        <div id="results" class="mt-4"></div>
        <div id="resultsTrxDetails" class="mt-4"></div>

        <form id="create-form" class="bg-gray-100 p-4 mt-4 rounded-lg w-full">
            <div>
                <label for="buyerTrx" class="block text-sm font-medium text-gray-700 mb-2">Buyer transaction ID to
                    dispute :</label>
                <!-- small info -->
                <small class="text-xs text-gray-500">
                    Separate case numbers with a comma (,) or a space, example:
                </small>
                <small class="text-xs text-gray-500">57B33410AL633261W,3XD2509525082880M,...</small>
                <br>
                <small class="text-xs text-gray-500"> Documentation :
                    <a target="_blank" class="text-blue-500 hover:text-blue-700 hover:underline"
                        href="https://developer.paypal.com/docs/disputes/integration-guide/#sandbox-only-methods">Create
                        dispute via API</a>
                </small>
                <br>
                <small class="text-xs text-gray-500"> Extract BUYER transaction from report :
                    <a target="_blank" class="text-blue-500 hover:text-blue-700 hover:underline"
                        href="https://www.sandbox.paypal.com/reports/dlog">https://www.sandbox.paypal.com/reports/dlog</a>
                </small>
            </div>
            <div class="flex gap-2">
                <input type="text" id="buyerTrx" name="buyerTrx" required
                    class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 border border-solid border-gray-300 rounded-md w-full p-2 w-full">
                <button type="submit"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Create
                    disputes</button>
            </div>
        </form>

        <div id="resultCreateDispute" class="mt-4"></div>

        <form id="search-form" class="bg-gray-100 p-4 mt-4 rounded-lg">
            <div>

                <label for="caseNumbers" class="block text-sm font-medium text-gray-700 mb-2">PayPal disputes list to
                    search :</label>
                <!-- small info -->
                <small class="text-xs text-gray-500">
                    Separate case numbers with a comma (,) or a space, example:
                </small>
                <small class="text-xs text-gray-500">PP-R-NCH-10101213,PP-R-ZKH-10101206,PP-R-VBY-10101225</small>
            </div>
            <div class="flex gap-2">
                <input type="text" id="caseNumbers" name="caseNumbers" required
                    class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 border border-solid border-gray-300 rounded-md w-full p-2">
                <button type="submit"
                    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Search
                    disputes</button>
            </div>
        </form>

        <div id="resultsCheckDispute" class="mt-4"></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script>
        const BTMID = '<%= BTMID %>'

        $(document).ready(function () {
            $('#loop-form').submit(function (e) {
                e.preventDefault();
                $('#resultsTrxDetails').html('LOADING...');
                $.ajax({
                    type: 'POST',
                    url: '/loop-transactions',
                    data: JSON.stringify({ number: $('#number').val() }),
                    contentType: 'application/json',
                    success: function (data) {
                        $('#results').html('<p>Transactions lancées pour ' + $('#number').val() + ' fois</p>');

                        let html = '<ul>';
                        data.forEach(function (trx) {
                            if (trx.success) {
                                let btTrxView = "https://sandbox.braintreegateway.com/merchants/" + BTMID + "/transactions/" + trx.transactionID;

                                html += '<li>Transaction ID: <a class="text-blue-500 hover:underline hover:text-blue-600" href="' + btTrxView + '" target="_blank">' + trx.transactionID + '</a>, Amount: ' + trx.amount + ', Order ID: ' + trx.orderId + '</li>';
                            } else {
                                html += '<li>Error: ' + trx.error + '</li>';
                            }
                        });
                        html += '</ul>';

                        $('#resultsTrxDetails').html(html);
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            });



            $('#create-form').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    type: 'POST',
                    url: '/create-the-disputes',
                    data: JSON.stringify({ buyerTrx: $('#buyerTrx').val() }),
                    contentType: 'application/json',
                    success: function (data) {

                        let disputeList = "";

                        console.log("create-the-disputes", data);

                        $('#resultCreateDispute').html('<p>Création de disputes en cours...</p>');

                        let html = '<ul>';
                        if (Array.isArray(data)) {
                            data.forEach((item, index) => {
                                if (item.links) {
                                    item.links.forEach((link) => {
                                        // Link exemple : https://api-m.sandbox.paypal.com/v1/customer/disputes/PP-R-MAG-10101422
                                        const disputeId = link.href.split('/').pop();
                                        html += `<li>Dispute ID : ${disputeId}</li>`;
                                        disputeList = `${disputeId},`;
                                        $('#caseNumbers').val($('#caseNumbers').val() + disputeList)
                                        // delete last ","
                                        $('#caseNumbers').val($('#caseNumbers').val().slice(0, -1));
                                    });
                                } else {
                                    html += `<li>${item.transaction_id} : ${item.message}</li>`;
                                }
                            });

                        } else {
                            if (data.links !== undefined) {
                                // html += '<li>' + data.links[0].href + '</li>';
                                const disputeId = data.links[0].href.split('/').pop();
                                html += `<li>Dispute ID : ${disputeId}</li>`;
                                $('#caseNumbers').val(disputeId)
                            } else {
                                html += '<li>' + data.transaction_id + ' : ' + data.message + '</li>';
                            }
                        }
                        html += '</ul>';

                        $('#resultCreateDispute').html(html);
                    },

                    error: function (xhr, status, error) {
                        console.error(error);
                        $('#resultCreateDispute').html(error);
                    }
                });
            });

            $('#search-form').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    type: 'POST',
                    url: '/search-disputes-created',
                    data: JSON.stringify({ caseNumbers: $('#caseNumbers').val() }),
                    contentType: 'application/json',
                    success: function (data) {
                        $('#resultsCheckDispute').html('<p>Recherche de disputes en cours...</p>');

                        let html = '<div class="cards-container">';

                        data.forEach(function (lookup) {
                            console.log(lookup);

                            const ppResCenter = "https://www.sandbox.paypal.com/resolutioncenter/view/" + lookup.PayPal_Dispute;
                            const btDisputeView = "https://sandbox.braintreegateway.com/merchants/" + BTMID + "/disputes/" + lookup.Braintree_Dispute;

                            const ppLink = lookup.PayPal_Dispute
                                ? '<a class="disputeDetailLinks" href="' + ppResCenter + '" target="_blank">' + lookup.PayPal_Dispute + '</a>'
                                : 'No corresponding PayPal dispute found (yet)';

                            const btLink = lookup.Braintree_Dispute
                                ? '<a class="disputeDetailLinks" href="' + btDisputeView + '" target="_blank">' + lookup.Braintree_Dispute + '</a>'
                                : 'No corresponding Braintree dispute found (yet)';

                            html += `
                    <div class="card ${lookup.Braintree_Dispute ? 'valid' : 'invalid'}">
                        <div class="dispute-info">
                            <p><strong>PayPal Dispute :</strong> ${ppLink}</p>
                            <p><strong>Braintree Dispute :</strong> ${btLink}</p>
                        </div>
                    </div>
                `;
                        });

                        html += '</div>';

                        $('#resultsCheckDispute').html(html);
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            });
        });
    </script>
</body>

</html>